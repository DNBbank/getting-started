version: 2.1
commands:
  npm_install:
    description: "Install npm dependencies"
    steps:
      - restore_cache:
          key: v1-{{ checksum "nodejs/package-lock.json" }}

      - run:
          command: npm ci
          working_directory: nodejs

      - save_cache:
          key: v1-{{ checksum "nodejs/package-lock.json" }}
          paths:
            - "nodejs/node_modules"

  pipenv_install:
    description: "Install python dependencies"
    steps:
      - restore_cache:
          key: v2-{{ checksum "python/Pipfile.lock" }}

      - run: pip install pipenv
      - run:
          command: pipenv install --dev
          working_directory: python

      - save_cache:
          key: v2-{{ checksum "python/Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs/venv

  maven_install:
    description: "Install maven dependencies"
    steps:
      - restore_cache:
          key: v1-{{ checksum "java/pom.xml" }}

      - run:
          command: mvn dependency:go-offline
          working_directory: java

      - save_cache:
          paths:
            - ~/.m2
          key: v1-{{ checksum "java/pom.xml" }}

jobs:
  npm:
    parameters:
      task:
        description: "npm task to run"
        type: string
    docker:
      - image: circleci/node
    steps:
      - checkout
      - npm_install
      - run:
          command: npm <<parameters.task>>
          working_directory: nodejs

  python:
    parameters:
      task:
        description: "python task to run"
        type: string
    docker:
      - image: circleci/python
    steps:
      - checkout
      - pipenv_install
      - run:
          command: pipenv run <<parameters.task>>
          working_directory: python

  maven:
    parameters:
      task:
        description: "maven task to run"
        type: string
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout
      - maven_install
      - run:
          command: mvn <<parameters.task>>
          working_directory: java

workflows:
  version: 2
  nodejs:
    jobs:
      - npm:
          name: nodejs-example security audit
          task: audit
      - npm:
          name: nodejs-example lint
          task: run lint
      - npm:
          name: nodejs-example test
          task: test
  python:
    jobs:
      - python:
          name: python-example format
          task: black --check .
      - python:
          name: python-example flake8
          task: flake8
  java:
    jobs:
      - maven:
          name: java-example compile
          task: compile
